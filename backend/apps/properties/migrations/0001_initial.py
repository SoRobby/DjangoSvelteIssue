# Generated by Django 5.0.4 on 2024-12-06 05:08

import apps.core.custom_fields.key_field
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the property",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Unique slug of the property",
                        max_length=255,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "key",
                    apps.core.custom_fields.key_field.KeyField(
                        help_text="Key used for API calls",
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Key must be lowercase, cannot start with a number, and can only contain underscores.",
                                regex="^[a-z_][a-z0-9_]*$",
                            )
                        ],
                        verbose_name="Key",
                    ),
                ),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("integer", "Integer"),
                            ("float", "Float"),
                            ("string", "String"),
                            ("boolean", "Boolean"),
                        ],
                        help_text="Type of the property",
                        max_length=20,
                        verbose_name="Property type",
                    ),
                ),
                (
                    "is_builtin",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the property is built-in or not",
                        verbose_name="Is built-in",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="published",
                        help_text="Status of the node",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the property",
                        max_length=6000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes for the admin",
                        max_length=5000,
                        null=True,
                        verbose_name="Admin notes",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Property",
                "verbose_name_plural": "Properties",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="IntegerProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "units_prefix",
                    models.CharField(
                        blank=True,
                        help_text="Units prefix",
                        max_length=10,
                        null=True,
                        verbose_name="Units prefix",
                    ),
                ),
                (
                    "units_suffix",
                    models.CharField(
                        blank=True,
                        help_text="Units suffix",
                        max_length=10,
                        null=True,
                        verbose_name="Units suffix",
                    ),
                ),
                (
                    "default_value",
                    models.IntegerField(
                        help_text="Default value of the property",
                        verbose_name="Default value",
                    ),
                ),
                (
                    "is_min_limit_enabled",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the minimum limit is enabled or not",
                        verbose_name="Is min limit enabled",
                    ),
                ),
                (
                    "is_max_limit_enabled",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the maximum limit is enabled or not",
                        verbose_name="Is max limit enabled",
                    ),
                ),
                (
                    "min_limit_value",
                    models.IntegerField(
                        blank=True,
                        help_text="Minimum limit value of the property",
                        null=True,
                        verbose_name="Min limit value",
                    ),
                ),
                (
                    "max_limit_value",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum limit value of the property",
                        null=True,
                        verbose_name="Max limit value",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "property",
                    models.OneToOneField(
                        help_text="Property to assign to the item",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="integer_property",
                        to="properties.property",
                        verbose_name="Property",
                    ),
                ),
            ],
            options={
                "verbose_name": "Integer property",
                "verbose_name_plural": "Integer properties",
                "ordering": ["property__name"],
            },
        ),
        migrations.CreateModel(
            name="FloatProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "units_prefix",
                    models.CharField(
                        blank=True,
                        help_text="Units prefix",
                        max_length=10,
                        null=True,
                        verbose_name="Units prefix",
                    ),
                ),
                (
                    "units_suffix",
                    models.CharField(
                        blank=True,
                        help_text="Units suffix",
                        max_length=10,
                        null=True,
                        verbose_name="Units suffix",
                    ),
                ),
                (
                    "default_value",
                    models.FloatField(
                        help_text="Default value of the property",
                        verbose_name="Default value",
                    ),
                ),
                (
                    "step_size",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Step size of the property",
                        verbose_name="Step size",
                    ),
                ),
                (
                    "is_min_limit_enabled",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the minimum limit is enabled or not",
                        verbose_name="Is min limit enabled",
                    ),
                ),
                (
                    "is_max_limit_enabled",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the maximum limit is enabled or not",
                        verbose_name="Is max limit enabled",
                    ),
                ),
                (
                    "min_limit_value",
                    models.FloatField(
                        blank=True,
                        help_text="Minimum limit value of the property",
                        null=True,
                        verbose_name="Min limit value",
                    ),
                ),
                (
                    "max_limit_value",
                    models.FloatField(
                        blank=True,
                        help_text="Maximum limit value of the property",
                        null=True,
                        verbose_name="Max limit value",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "property",
                    models.OneToOneField(
                        help_text="Property to assign to the item",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="float_property",
                        to="properties.property",
                        verbose_name="Property",
                    ),
                ),
            ],
            options={
                "verbose_name": "Float property",
                "verbose_name_plural": "Float properties",
                "ordering": ["property__name"],
            },
        ),
        migrations.CreateModel(
            name="BuiltinProperty",
            fields=[],
            options={
                "verbose_name": "Builtin property",
                "verbose_name_plural": "Builtin properties",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("properties.property",),
        ),
        migrations.CreateModel(
            name="CustomProperty",
            fields=[],
            options={
                "verbose_name": "Custom property",
                "verbose_name_plural": "Custom properties",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("properties.property",),
        ),
        migrations.CreateModel(
            name="PropertyLibrary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Server date and time when the item was deleted",
                        null=True,
                        verbose_name="Date deleted",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the item has been deleted or not",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the property library",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Unique slug of the property library",
                        max_length=255,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "key",
                    apps.core.custom_fields.key_field.KeyField(
                        help_text="Key used for API calls",
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Key must be lowercase, cannot start with a number, and can only contain underscores.",
                                regex="^[a-z_][a-z0-9_]*$",
                            )
                        ],
                        verbose_name="Key",
                    ),
                ),
                (
                    "is_builtin",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the property library is built-in or not",
                        verbose_name="Is built-in",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="published",
                        help_text="Status of the node",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the property library",
                        max_length=6000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes for the admin",
                        max_length=5000,
                        null=True,
                        verbose_name="Admin notes",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Property library",
                "verbose_name_plural": "Property libraries",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="property",
            name="library",
            field=models.ForeignKey(
                help_text="Library to assign the property to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="properties",
                to="properties.propertylibrary",
                verbose_name="Library",
            ),
        ),
        migrations.CreateModel(
            name="PropertySet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the property",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "key",
                    apps.core.custom_fields.key_field.KeyField(
                        help_text="Key used for API calls",
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Key must be lowercase, cannot start with a number, and can only contain underscores.",
                                regex="^[a-z_][a-z0-9_]*$",
                            )
                        ],
                        verbose_name="Key",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the property",
                        max_length=6000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes for the admin",
                        max_length=5000,
                        null=True,
                        verbose_name="Admin notes",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "properties",
                    models.ManyToManyField(
                        help_text="Properties to assign to the set",
                        related_name="property_sets",
                        to="properties.property",
                        verbose_name="Properties",
                    ),
                ),
            ],
            options={
                "verbose_name": "Property set",
                "verbose_name_plural": "Property sets",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="StringProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "default_value",
                    models.CharField(
                        blank=True,
                        help_text="Default value of the property",
                        max_length=255,
                        verbose_name="Default value",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "property",
                    models.OneToOneField(
                        help_text="Property to assign to the item",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="string_property",
                        to="properties.property",
                        verbose_name="Property",
                    ),
                ),
            ],
            options={
                "verbose_name": "String property",
                "verbose_name_plural": "String properties",
                "ordering": ["property__name"],
            },
        ),
        migrations.CreateModel(
            name="PropertyAlternativeName",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the property",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the property",
                        max_length=6000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes for the admin",
                        max_length=5000,
                        null=True,
                        verbose_name="Admin notes",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        help_text="Property to assign to the item",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alternative_names",
                        to="properties.property",
                        verbose_name="Property",
                    ),
                ),
            ],
            options={
                "verbose_name": "Property alternative name",
                "verbose_name_plural": "Property alternative names",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="properties__name_90ac93_idx")
                ],
            },
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["library"], name="properties__library_3941db_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(fields=["slug"], name="properties__slug_4fd4e3_idx"),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(fields=["key"], name="properties__key_0c9cd5_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="property",
            unique_together={("library", "slug")},
        ),
        migrations.AddIndex(
            model_name="propertyset",
            index=models.Index(fields=["name"], name="properties__name_e87635_idx"),
        ),
    ]
