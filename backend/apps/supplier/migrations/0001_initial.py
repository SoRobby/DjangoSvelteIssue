# Generated by Django 5.0.4 on 2024-12-06 05:08

import apps.core.custom_fields.key_field
import apps.supplier.models.supplier
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SupplierTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the tag. The name will be converted to lowercase.",
                        max_length=255,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="The slug based on the specialization tag name",
                        max_length=255,
                        unique=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the supplier tag",
                        max_length=2000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier tag",
                "verbose_name_plural": "Supplier tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Server date and time when the item was deleted",
                        null=True,
                        verbose_name="Date deleted",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the item has been deleted or not",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the permission",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "code",
                    apps.core.custom_fields.key_field.KeyField(
                        help_text="Code of the permission",
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Key must be lowercase, cannot start with a number, and can only contain underscores.",
                                regex="^[a-z_][a-z0-9_]*$",
                            )
                        ],
                        verbose_name="Code",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the permission",
                        max_length=6000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent permission",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="supplier.permission",
                        verbose_name="Parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Permission",
                "verbose_name_plural": "Permissions",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Server date and time when the item was deleted",
                        null=True,
                        verbose_name="Date deleted",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the item has been deleted or not",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the supplier",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "legal_name",
                    models.CharField(
                        blank=True,
                        help_text="Legal name of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="Legal name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="The slug based on the supplier name",
                        max_length=255,
                        unique=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "acronym",
                    models.CharField(
                        blank=True,
                        help_text="Acronym of the supplier",
                        max_length=16,
                        null=True,
                        verbose_name="Acronym",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Website of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="Website",
                    ),
                ),
                (
                    "facebook_link",
                    models.URLField(
                        blank=True,
                        help_text="Facebook link of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="Facebook link",
                    ),
                ),
                (
                    "instagram_link",
                    models.URLField(
                        blank=True,
                        help_text="Instagram link of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="Instagram link",
                    ),
                ),
                (
                    "linkedin_link",
                    models.URLField(
                        blank=True,
                        help_text="LinkedIn link of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="Linkedin link",
                    ),
                ),
                (
                    "youtube_link",
                    models.URLField(
                        blank=True,
                        help_text="YouTube link of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="YouTube link",
                    ),
                ),
                (
                    "x_link",
                    models.URLField(
                        blank=True,
                        help_text="X link of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="X link",
                    ),
                ),
                (
                    "tagline",
                    models.CharField(
                        blank=True,
                        help_text="Short tagline of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="Tagline",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the supplier",
                        max_length=6000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "number_of_employees",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0-1", "0-1 employees"),
                            ("2-10", "2-10 employees"),
                            ("11-50", "11-50 employees"),
                            ("51-200", "51-200 employees"),
                            ("201-500", "201-500 employees"),
                            ("501-1000", "501-1000 employees"),
                            ("1001-5000", "1001-5000 employees"),
                            ("5001-10000", "5001-10000 employees"),
                            ("10001+", "10001+ employees"),
                        ],
                        help_text="Number of employees that are employed by the supplier",
                        max_length=16,
                        null=True,
                        verbose_name="Number of employees",
                    ),
                ),
                (
                    "year_founded",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Year the supplier was founded",
                        null=True,
                        verbose_name="Year founded",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        help_text="Meta tag title of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="Meta title",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True,
                        help_text="Meta tag description of the supplier",
                        max_length=160,
                        null=True,
                        verbose_name="Meta description",
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        blank=True,
                        help_text="Meta tag keywords of the supplier",
                        max_length=255,
                        null=True,
                        verbose_name="Meta keywords",
                    ),
                ),
                (
                    "logo_raw",
                    models.ImageField(
                        blank=True,
                        help_text="Raw logo image of the supplier",
                        null=True,
                        upload_to=apps.supplier.models.supplier.Supplier.raw_logo_upload_path,
                        verbose_name="Logo raw",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text='Processed logo image in WEBP format.                                       <br>Required image size: 300x300                                       <br>Required image aspect ratio: 1.0                                       <br>The main logo should be uploaded to the "logo_raw" field and the model will                                       properly process the logo to generate the "logo" and "logo_thumbnail" image and                                       set the value for those fields.',
                        null=True,
                        upload_to=apps.supplier.models.supplier.Supplier.processed_logo_path,
                        verbose_name="Logo",
                    ),
                ),
                (
                    "logo_thumbnail",
                    models.ImageField(
                        blank=True,
                        help_text='Processed logo thumbnail image in WEBP format.                                       <br>Required image size: 100x100                                       <br>Required image aspect ratio: 1.0                                       <br>The main logo should be uploaded to the "logo_raw" field and the model will                                       properly process the logo to generate the "logo" and "logo_thumbnail" image and                                       set the value for those fields.',
                        null=True,
                        upload_to=apps.supplier.models.supplier.Supplier.processed_logo_thumbnail_path,
                        verbose_name="Logo thumbnail",
                    ),
                ),
                (
                    "is_premium",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the supplier is premium or not",
                        verbose_name="Is premium",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("acquired", "Acquired"),
                            ("inactive", "Inactive"),
                        ],
                        default="active",
                        help_text="Status of the supplier",
                        max_length=16,
                        verbose_name="Status",
                    ),
                ),
                (
                    "is_blacklisted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the supplier is blacklisted or not",
                        verbose_name="Is blacklisted",
                    ),
                ),
                (
                    "is_hidden",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the supplier is hidden or not",
                        verbose_name="Is hidden",
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        blank=True,
                        help_text="Admin notes for the supplier",
                        max_length=4000,
                        null=True,
                        verbose_name="Admin notes",
                    ),
                ),
                (
                    "acquired_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Supplier that acquired this supplier",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acquired",
                        to="supplier.supplier",
                        verbose_name="Acquired by",
                    ),
                ),
                (
                    "blocked_countries",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Countries where the supplier is blacklisted",
                        to="core.country",
                        verbose_name="Blocked countries",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Tags of the supplier",
                        to="supplier.suppliertag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier",
                "verbose_name_plural": "Suppliers",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Server date and time when the item was deleted",
                        null=True,
                        verbose_name="Date deleted",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the item has been deleted or not",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the role",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the role",
                        max_length=6000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "permission",
                    models.ManyToManyField(
                        help_text="Permissions of the role",
                        related_name="permission_roles",
                        to="supplier.permission",
                        verbose_name="Permissions",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier of the role",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplier_roles",
                        to="supplier.supplier",
                        verbose_name="Supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role",
                "verbose_name_plural": "Roles",
                "ordering": ["supplier", "name"],
            },
        ),
        migrations.CreateModel(
            name="SupplierAlternativeName",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Alternative name of the supplier",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier of the alternative name",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alternative_names",
                        to="supplier.supplier",
                        verbose_name="Supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier alternative name",
                "verbose_name_plural": "Supplier alternative names",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SupplierContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Server date and time when the item was deleted",
                        null=True,
                        verbose_name="Date deleted",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the item has been deleted or not",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the contact",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True,
                        help_text="Position of the contact",
                        max_length=255,
                        null=True,
                        verbose_name="Position",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email of the contact",
                        max_length=255,
                        unique=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Phone number of the contact",
                        max_length=16,
                        null=True,
                        verbose_name="Phone",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the contact",
                        max_length=1000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "show_email",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to show the email address on the website",
                        verbose_name="Show email",
                    ),
                ),
                (
                    "show_phone",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to show the phone number on the website",
                        verbose_name="Show phone",
                    ),
                ),
                (
                    "receive_inquiries",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to receive inquiries from the website",
                        verbose_name="Receive inquiries",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier of the contact",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="supplier.supplier",
                        verbose_name="Supplier",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User of the contact",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplier_contacts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier contact",
                "verbose_name_plural": "Supplier contacts",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SupplierFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Server date and time when the item was deleted",
                        null=True,
                        verbose_name="Date deleted",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the item has been deleted or not",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the file",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the file",
                        max_length=1000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier of the file",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="supplier.supplier",
                        verbose_name="Supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier file",
                "verbose_name_plural": "Supplier files",
                "ordering": ["supplier", "name"],
            },
        ),
        migrations.CreateModel(
            name="SupplierFileVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Server date and time when the item was deleted",
                        null=True,
                        verbose_name="Date deleted",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the item has been deleted or not",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="File uploaded by the supplier",
                        upload_to="supplier/files/",
                        verbose_name="File",
                    ),
                ),
                (
                    "version",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Version of the file",
                        verbose_name="Version",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the file",
                        max_length=1000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "supplier_file",
                    models.ForeignKey(
                        help_text="Supplier file of the version",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="supplier.supplierfile",
                        verbose_name="Supplier file",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier file version",
                "verbose_name_plural": "Supplier file versions",
                "ordering": ["supplier_file", "-version"],
            },
        ),
        migrations.CreateModel(
            name="SupplierFollower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier of the follower",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="supplier.supplier",
                        verbose_name="Supplier",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User that is following the supplier",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplier_followers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier follower",
                "verbose_name_plural": "Supplier followers",
                "ordering": ["user"],
            },
        ),
        migrations.CreateModel(
            name="SupplierLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "address1",
                    models.CharField(
                        help_text="Address line 1",
                        max_length=255,
                        verbose_name="Address 1",
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        blank=True,
                        help_text="Address line 2",
                        max_length=255,
                        null=True,
                        verbose_name="Address 2",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        help_text="City of the address",
                        max_length=255,
                        verbose_name="City",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        help_text="Postal code of the address",
                        max_length=16,
                        verbose_name="Postal code",
                    ),
                ),
                (
                    "subnational_region",
                    models.CharField(
                        blank=True,
                        help_text="State, province, or region",
                        max_length=255,
                        null=True,
                        verbose_name="Subnational region",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the location",
                        max_length=255,
                        null=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the location",
                        max_length=1000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Website of the location",
                        max_length=255,
                        null=True,
                        verbose_name="Website",
                    ),
                ),
                (
                    "is_headquarters",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the location is the headquarters of the supplier",
                        verbose_name="Is headquarters",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        help_text="Country of the address",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_country",
                        to="core.country",
                        verbose_name="Country",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier of the location",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="supplier.supplier",
                        verbose_name="Supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier location",
                "verbose_name_plural": "Supplier locations",
                "ordering": ["address1"],
            },
        ),
        migrations.CreateModel(
            name="SupplierRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("admin", "Admin"), ("staff", "Staff")],
                        help_text="Role of the user",
                        max_length=16,
                        verbose_name="Role",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier of the role",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to="supplier.supplier",
                        verbose_name="Supplier",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User of the role",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplier_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier role",
                "verbose_name_plural": "Supplier roles",
                "ordering": ["user"],
            },
        ),
        migrations.CreateModel(
            name="SupplierJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Server date and time when the item was deleted",
                        null=True,
                        verbose_name="Date deleted",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the item has been deleted or not",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "address1",
                    models.CharField(
                        help_text="Address line 1",
                        max_length=255,
                        verbose_name="Address 1",
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        blank=True,
                        help_text="Address line 2",
                        max_length=255,
                        null=True,
                        verbose_name="Address 2",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        help_text="City of the address",
                        max_length=255,
                        verbose_name="City",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        help_text="Postal code of the address",
                        max_length=16,
                        verbose_name="Postal code",
                    ),
                ),
                (
                    "subnational_region",
                    models.CharField(
                        blank=True,
                        help_text="State, province, or region",
                        max_length=255,
                        null=True,
                        verbose_name="Subnational region",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the job", max_length=255, verbose_name="Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the job",
                        max_length=6000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "application_link",
                    models.URLField(
                        blank=True,
                        help_text="Application link for the job",
                        max_length=255,
                        null=True,
                        verbose_name="Application link",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("archived", "Archived"),
                            ("draft", "Draft"),
                            ("published", "Published"),
                        ],
                        default="published",
                        help_text="Status of the job",
                        max_length=16,
                        verbose_name="Status",
                    ),
                ),
                (
                    "posting_start_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the job posting starts",
                        null=True,
                        verbose_name="Posting start date",
                    ),
                ),
                (
                    "posting_end_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the job posting ends",
                        null=True,
                        verbose_name="Posting end date",
                    ),
                ),
                (
                    "workplace_setting",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("remote", "Remote"),
                            ("hybrid", "Hybrid"),
                            ("onsite", "Onsite"),
                        ],
                        help_text="Workplace setting of the job",
                        max_length=16,
                        null=True,
                        verbose_name="Workplace setting",
                    ),
                ),
                (
                    "employment_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("full_time", "Full-time"),
                            ("part_time", "Part-time"),
                            ("contract", "Contract"),
                            ("internship", "Internship"),
                            ("other", "Other"),
                        ],
                        help_text="Employment type of the job",
                        max_length=16,
                        null=True,
                        verbose_name="Employment type",
                    ),
                ),
                (
                    "annual_salary_min",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Minimum annual salary of the job",
                        null=True,
                        verbose_name="Annual salary min",
                    ),
                ),
                (
                    "annual_salary_max",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum annual salary of the job",
                        null=True,
                        verbose_name="Annual salary max",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        blank=True,
                        help_text="Currency of the salary",
                        max_length=16,
                        null=True,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "is_promoted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the job is promoted or not",
                        verbose_name="Is promoted",
                    ),
                ),
                (
                    "promotion_start_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the promotion starts",
                        null=True,
                        verbose_name="Promotion start date",
                    ),
                ),
                (
                    "promotion_end_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the promotion ends",
                        null=True,
                        verbose_name="Promotion end date",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        help_text="Country of the address",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_country",
                        to="core.country",
                        verbose_name="Country",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier of the job",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to="supplier.supplier",
                        verbose_name="Supplier",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Tags of the job",
                        to="supplier.suppliertag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier job",
                "verbose_name_plural": "Supplier jobs",
                "ordering": ["-posting_start_date"],
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Server date and time when the item was deleted",
                        null=True,
                        verbose_name="Date deleted",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the item has been deleted or not",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified the item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        help_text="Role of the user",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to="supplier.role",
                        verbose_name="Role",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User of the user role",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User role",
                "verbose_name_plural": "User roles",
                "ordering": ["user"],
            },
        ),
        migrations.AddIndex(
            model_name="permission",
            index=models.Index(fields=["code"], name="supplier_pe_code_ee01df_idx"),
        ),
        migrations.AddIndex(
            model_name="supplierfileversion",
            index=models.Index(
                fields=["supplier_file"], name="supplier_su_supplie_3cb65c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierfileversion",
            index=models.Index(
                fields=["version"], name="supplier_su_version_787617_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="supplierfileversion",
            unique_together={("supplier_file", "version")},
        ),
        migrations.AlterUniqueTogether(
            name="supplierfollower",
            unique_together={("supplier", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="supplierrole",
            unique_together={("supplier", "user")},
        ),
        migrations.AddIndex(
            model_name="supplierjob",
            index=models.Index(
                fields=["supplier"], name="supplier_su_supplie_7666b4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierjob",
            index=models.Index(fields=["status"], name="supplier_su_status_63bde0_idx"),
        ),
        migrations.AddIndex(
            model_name="supplier",
            index=models.Index(fields=["name"], name="supplier_su_name_3342d4_idx"),
        ),
        migrations.AddIndex(
            model_name="supplier",
            index=models.Index(fields=["slug"], name="supplier_su_slug_3014a8_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="userrole",
            unique_together={("user", "role")},
        ),
    ]
