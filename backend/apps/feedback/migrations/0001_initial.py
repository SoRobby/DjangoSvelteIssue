# Generated by Django 5.0.4 on 2024-12-06 05:08

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FeedbackMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the feedback",
                        max_length=255,
                        null=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Email of the feedback",
                        max_length=255,
                        null=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "page_url",
                    models.URLField(
                        blank=True,
                        help_text="URL of the page where the feedback was created",
                        max_length=255,
                        null=True,
                        verbose_name="Page URL",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("bug", "Bug"),
                            ("feature_request", "Feature Request"),
                            ("general", "General"),
                            ("other", "Other"),
                        ],
                        default="general",
                        help_text="Category of the feedback",
                        max_length=255,
                        verbose_name="Category",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_review", "In Review"),
                            ("planned", "Planned"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("archived", "Archived"),
                            ("rejected", "Rejected"),
                        ],
                        default="in_review",
                        help_text="Status of the feedback",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Message of the feedback",
                        max_length=5000,
                        verbose_name="Content",
                    ),
                ),
                (
                    "date_completed",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date the feedback was completed",
                        null=True,
                        verbose_name="Date completed",
                    ),
                ),
                (
                    "date_archived",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date the feedback was archived",
                        null=True,
                        verbose_name="Date archived",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the feedback",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feedback message",
                "verbose_name_plural": "Feedback messages",
                "ordering": ["date_created"],
                "indexes": [
                    models.Index(
                        fields=["category"], name="feedback_fe_categor_8c4b88_idx"
                    ),
                    models.Index(
                        fields=["status"], name="feedback_fe_status_8653a4_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SupportMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the person who submitted the support message",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email of the person who submitted the support message",
                        max_length=255,
                        verbose_name="Email",
                    ),
                ),
                (
                    "page_url",
                    models.URLField(
                        blank=True,
                        help_text="URL of the page where the support item was submitted from",
                        max_length=255,
                        null=True,
                        verbose_name="Page URL",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                        ],
                        default="not_started",
                        help_text="Status of the feedback",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Subject of the support message",
                        max_length=255,
                        null=True,
                        verbose_name="Subject",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Message of the feedback",
                        max_length=5000,
                        verbose_name="Content",
                    ),
                ),
                (
                    "date_completed",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date the feedback was completed",
                        null=True,
                        verbose_name="Date completed",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who submitted the support message",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="support_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Support message",
                "verbose_name_plural": "Support messages",
                "ordering": ["-date_created"],
                "indexes": [
                    models.Index(
                        fields=["status"], name="feedback_su_status_7475d4_idx"
                    )
                ],
            },
        ),
    ]
